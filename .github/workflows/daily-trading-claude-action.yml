name: Daily AI Trading (Claude Code Action)

on:
  # Îß§Ïùº ÌèâÏùº UTC 22:30 Ïã§Ìñâ (ÎØ∏Íµ≠ ÎèôÎ∂ÄÏãúÍ∞Ñ Ïò§ÌõÑ 5:30 ÎòêÎäî 6:30)
  schedule:
    - cron: '30 22 * * 1-5'  # Ïõî-Í∏à (ÌèâÏùºÎßå)

  # ÏàòÎèô Ïã§Ìñâ Í∞ÄÎä•
  workflow_dispatch:
    inputs:
      trading_date:
        description: 'Trading date (YYYY-MM-DD) - leave empty for today'
        required: false
        type: string

jobs:
  trading:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt

      - name: Fetch latest stock data
        env:
          DATA_DIR: ./data
          DAYS_BACK: 30
        run: |
          python fetch_stock_data.py

      - name: Fetch market news
        env:
          JINA_API_KEY: ${{ secrets.JINA_API_KEY }}
          TRADING_DATE: ${{ inputs.trading_date }}
          USE_ALPACA: 'true'
          SIMULATION_MODE: 'false'
        run: |
          python fetch_market_news.py

      - name: Prepare trading data
        env:
          TRADING_DATE: ${{ inputs.trading_date }}
          USE_ALPACA: 'true'
          SIMULATION_MODE: 'false'
        run: |
          python prepare_trading_data.py

      - name: Run Claude Code Action for trading decision
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          prompt: |
            You are an expert AI trader. Please perform the following task:

            1. Read the file 'trading_prompt.txt' which contains detailed trading instructions
            2. Read the file 'trading_data.json' which contains:
               - Current portfolio positions and cash
               - Market prices for all NASDAQ 100 stocks
               - Market news (general market, sector-specific, and individual stock news)
            3. Analyze the market data and news to make informed trading decisions
            4. Write your trading decision to 'claude_decision.json' in the following JSON format:
               {
                 "analysis": "Your detailed market and news analysis with specific references",
                 "actions": [
                   {"action": "buy", "symbol": "AAPL", "amount": 10, "reason": "specific reasoning"},
                   {"action": "sell", "symbol": "MSFT", "amount": 5, "reason": "specific reasoning"}
                 ]
               }
            5. If no trades are needed, use: {"analysis": "reasoning for holding", "actions": []}

            IMPORTANT: Base your decisions on the news content and fundamental analysis provided in the data files.

            Please complete this task now.
          claude_args: |
            --model claude-sonnet-4-5-20250929
            --max-turns 10

      - name: Execute trades
        env:
          DECISION_FILE: claude_decision.json
          TRADING_DATA_FILE: trading_data.json
          # Trading mode configuration
          SIMULATION_MODE: 'false'
          USE_ALPACA: 'true'
          CONFIRM_REAL_TRADING: 'true'
          # Alpaca API credentials (only used if USE_ALPACA=true)
          ALPACA_API_KEY: ${{ secrets.ALPACA_API_KEY }}
          ALPACA_API_SECRET: ${{ secrets.ALPACA_API_SECRET }}
          ALPACA_PAPER: 'true'
        run: |
          python execute_trades.py

      - name: Commit and push results
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          git add data/

          # Î≥ÄÍ≤ΩÏÇ¨Ìï≠Ïù¥ ÏûàÏùÑ ÎïåÎßå Ïª§Î∞ã
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "ü§ñ Auto trading: $(date +'%Y-%m-%d')"
            git push
          fi

      - name: Upload trading logs and artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: trading-logs-${{ github.run_number }}
          path: |
            data/agent_data/*/log/
            data/agent_data/*/position/
            trading_data.json
            trading_prompt.txt
            claude_decision.json
            market_news.json
          retention-days: 90

      - name: Clean up temporary files
        if: always()
        run: |
          rm -f trading_data.json trading_prompt.txt claude_decision.json market_news.json
